import { useParams, Link } from "react-router-dom";
import { useState } from "react";
import Layout from "../Layout";
import exploitations from "../assets/exploitations.mock";
import { scenarios, resultatsScenarios } from "../assets/scenarios.mock";
import ContexteSection from "../components/ContexteSection";
import ResultatsSection from "../components/ResultatsSection";
import ScenarioForm from "../components/ScenarioForm";

export default function ExploitationPage() {
    const { id } = useParams<{ id: string }>();
    const [activeTab, setActiveTab] = useState<"contexte" | "t0" | "previsionnel" | "resultats">(
        "contexte"
    );

    const exploitation = exploitations.find((exp) => exp.id === id);
    const scenarioT0 = scenarios.find(
        (s) => s.exploitationId === id && s.type === "T0"
    );
    const scenarioPrev = scenarios.find(
        (s) => s.exploitationId === id && s.type === "previsionnel"
    );
    const resultatsT0 = resultatsScenarios.find(
        (r) => r.scenarioId === scenarioT0?.id
    );
    const resultatsPrev = resultatsScenarios.find(
        (r) => r.scenarioId === scenarioPrev?.id
    );

    if (!exploitation) {
        return (
            <Layout>
                <div className="text-center">
                    <h1 className="text-2xl font-bold text-red-600 mb-4">
                        Exploitation non trouvée
                    </h1>
                    <Link to="/" className="text-blue-600 hover:underline">
                        Retour à l'accueil
                    </Link>
                </div>
            </Layout>
        );
    }

    return (
        <Layout fullHeight>
            <div className="flex flex-col h-full p-6">
                {/* En-tête */}
                <div className="flex items-center justify-between mb-6">
                    <div>
                        <h1 className="text-3xl font-bold text-gray-900">
                            {exploitation.nom}
                        </h1>
                        <p className="text-gray-600">
                            Code SAP : {exploitation.codeSAP}
                        </p>
                        <p className="text-sm text-gray-500">
                            {exploitation.typeDiag}
                        </p>
                    </div>
                    <Link
                        to="/"
                        className="px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
                    >
                        Retour
                    </Link>
                </div>

                {/* Informations clés mises en avant */}
                <div className="bg-blue-50 rounded-lg p-4 mb-6 border-l-4 border-blue-500">
                    <h3 className="text-lg font-semibold text-gray-900 mb-3">Informations clés</h3>
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div className="bg-white p-3 rounded-lg shadow-sm">
                            <label className="block text-sm font-medium text-blue-700 mb-1">
                                Type de sol
                            </label>
                            <p className="text-gray-900 font-semibold">
                                {exploitation.contexte.analyseSol.typeSol}
                            </p>
                        </div>
                        <div className="bg-white p-3 rounded-lg shadow-sm">
                            <label className="block text-sm font-medium text-blue-700 mb-1">
                                Zone climatique
                            </label>
                            <p className="text-gray-900 font-semibold">
                                {exploitation.contexte.contexteClimatique.zoneClimatique}
                            </p>
                        </div>
                        <div className="bg-white p-3 rounded-lg shadow-sm">
                            <label className="block text-sm font-medium text-blue-700 mb-1">
                                Petite Région Agricole
                            </label>
                            <p className="text-gray-900 font-semibold text-sm">
                                {exploitation.contexte.contexteClimatique.pra}
                            </p>
                        </div>
                    </div>
                </div>

                {/* Navigation des onglets */}
                <div className="border-b border-gray-200 mb-6">
                    <nav className="-mb-px flex space-x-8">
                        <button
                            onClick={() => setActiveTab("contexte")}
                            className={`py-2 px-1 border-b-2 font-medium text-sm ${
                                activeTab === "contexte"
                                    ? "border-blue-500 text-blue-600"
                                    : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
                            }`}
                        >
                            Contexte Exploitation
                        </button>
                        <button
                            onClick={() => setActiveTab("t0")}
                            className={`py-2 px-1 border-b-2 font-medium text-sm ${
                                activeTab === "t0"
                                    ? "border-blue-500 text-blue-600"
                                    : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
                            }`}
                        >
                            T0
                        </button>
                        <button
                            onClick={() => setActiveTab("previsionnel")}
                            className={`py-2 px-1 border-b-2 font-medium text-sm ${
                                activeTab === "previsionnel"
                                    ? "border-blue-500 text-blue-600"
                                    : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
                            }`}
                        >
                            Prévisionnel
                        </button>
                        <button
                            onClick={() => setActiveTab("resultats")}
                            className={`py-2 px-1 border-b-2 font-medium text-sm ${
                                activeTab === "resultats"
                                    ? "border-blue-500 text-blue-600"
                                    : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
                            }`}
                        >
                            Perf agro détaillée
                        </button>
                    </nav>
                </div>

                {/* Contenu des onglets */}
                <div className="flex-1 bg-gray-50 rounded-lg border p-6 overflow-y-auto">
                    {activeTab === "contexte" && (
                        <ContexteSection contexte={exploitation.contexte} />
                    )}
                    {activeTab === "t0" && (
                        <div>
                            {scenarioT0 && !scenarioT0.isEmpty ? (
                                <ScenarioForm
                                    scenario={scenarioT0}
                                    editMode={false}
                                />
                            ) : (
                                <div className="text-center py-12">
                                    <div className="w-24 h-24 mx-auto mb-4 bg-gray-200 rounded-full flex items-center justify-center">
                                        <svg
                                            className="w-12 h-12 text-gray-400"
                                            fill="none"
                                            stroke="currentColor"
                                            viewBox="0 0 24 24"
                                        >
                                            <path
                                                strokeLinecap="round"
                                                strokeLinejoin="round"
                                                strokeWidth={2}
                                                d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                                            />
                                        </svg>
                                    </div>
                                    <h3 className="text-xl font-semibold text-gray-700 mb-2">
                                        Données T0 non importées
                                    </h3>
                                    <p className="text-gray-500 mb-6">
                                        Les données du scénario T0 n'ont pas encore été importées.
                                    </p>
                                    <Link
                                        to={`/exploitation/${id}/scenario/T0`}
                                        className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
                                    >
                                        Importer les données T0
                                    </Link>
                                </div>
                            )}
                        </div>
                    )}
                    {activeTab === "previsionnel" && (
                        <div>
                            {scenarioPrev && !scenarioPrev.isEmpty ? (
                                <ScenarioForm
                                    scenario={scenarioPrev}
                                    editMode={false}
                                    scenarioComparaison={scenarioT0}
                                    resultatsComparaison={resultatsT0}
                                />
                            ) : (
                                <div className="text-center py-12">
                                    <div className="w-24 h-24 mx-auto mb-4 bg-gray-200 rounded-full flex items-center justify-center">
                                        <svg
                                            className="w-12 h-12 text-gray-400"
                                            fill="none"
                                            stroke="currentColor"
                                            viewBox="0 0 24 24"
                                        >
                                            <path
                                                strokeLinecap="round"
                                                strokeLinejoin="round"
                                                strokeWidth={2}
                                                d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
                                            />
                                        </svg>
                                    </div>
                                    <h3 className="text-xl font-semibold text-gray-700 mb-2">
                                        Données prévisionnelles non importées
                                    </h3>
                                    <p className="text-gray-500 mb-6">
                                        Les données du scénario prévisionnel n'ont pas encore été importées.
                                    </p>
                                    <Link
                                        to={`/exploitation/${id}/scenario/previsionnel`}
                                        className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
                                    >
                                        Importer les données prévisionnelles
                                    </Link>
                                </div>
                            )}
                        </div>
                    )}
                    {activeTab === "resultats" && (
                        <ResultatsSection
                            resultatsT0={resultatsT0}
                            resultatsPrev={resultatsPrev}
                            scenarioT0={scenarioT0}
                            scenarioPrev={scenarioPrev}
                        />
                    )}
                </div>

                {/* Actions - Seulement pour la comparaison maintenant */}
                <div className="flex justify-center mt-6">
                    <Link
                        to={`/exploitation/${id}/comparaison`}
                        className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
                    >
                        Comparaison des Scénarios
                    </Link>
                </div>
            </div>
        </Layout>
    );
}
